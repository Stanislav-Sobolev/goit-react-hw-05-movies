{"version":3,"file":"static/js/448.80789fbe.chunk.js","mappings":"yPAEaA,EAAuBC,EAAAA,GAAAA,IAAH,gJ,uCCApBC,EAAaD,EAAAA,GAAAA,IAAH,0CAIVE,EAAiBF,EAAAA,GAAAA,IAAH,8CAIdG,EAAcH,EAAAA,GAAAA,EAAH,iE,SCRXI,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,OACE,+BACE,UAACJ,EAAD,WACGI,EAAUC,cACT,gBACEC,IAAK,kCAAoCF,EAAUC,YACnDE,IAAI,iBAGR,UAACN,EAAD,YACE,wBAAKG,EAAUI,SACf,wCAAgBJ,EAAUK,iBAC1B,SAACP,EAAD,wBACA,uBAAIE,EAAUM,YACd,SAACR,EAAD,sBACA,uBACGE,EAAUO,OAAOC,QAAO,SAACC,EAAKC,GAC7B,OAAOD,EAAM,IAAMC,EAAGC,OACrB,e,mBCnBFC,EAAiB,mCAAG,WAAMC,GAAN,gFAC/BC,IAAAA,SAAAA,QAAyB,8BACX,mCACRC,EAAUF,EAHe,SAKLC,IAAAA,IAAA,kBACRC,EADQ,oBAHZ,mCAGY,oBAEvBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MARe,cAKzBG,EALyB,yBAWxBA,GAXwB,2CAAH,sDC4D9B,EAtDqB,WAAO,IAAD,IACzB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOrB,EAAP,KAAkBsB,EAAlB,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOJ,EAAP,KAAcM,EAAd,KACQV,GAAOW,EAAAA,EAAAA,MAAPX,GACFY,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6GAEgBhB,EAAkBC,GAFlC,OAEJO,EAFI,OAGVE,EAAaF,EAAYS,MAHf,gDAKVN,EAAS,KAAMO,SACfZ,QAAQC,IAAI,qBAAsB,KAAMW,SAN9B,yDAAH,qDAUXF,MACC,CAACf,KAGF,gCACGI,IAAS,uBAAIA,IACbjB,IACC,iCACE,SAAC,KAAD,CAAM+B,GAAE,oBAAEN,EAASO,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,6BACE,SAAC,MAAD,IADF,gBAMF,SAAClC,EAAD,CAAWC,UAAWA,KAEtB,UAACN,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMqC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAG,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD","sources":["components/movieDetails/MovieDetails.styled.js","components/movieCard/MovieCard.styled.js","components/movieCard/MovieCard.jsx","services/fetchMovieDetails.js","components/movieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledAdditionalWrap = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  border-top: 2px solid lightgray;\n  border-bottom: 2px solid lightgray;\n`;\n","import styled from 'styled-components';\n\nexport const StyledWrap = styled.div`\n  display: flex;\n`;\n\nexport const StyledTextWrap = styled.div`\n  margin-left: 20px;\n`;\n\nexport const StyledTitle = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n`;\n","import { StyledWrap, StyledTextWrap, StyledTitle } from './MovieCard.styled';\n\nexport const MovieCard = ({ movieData }) => {\n  return (\n    <>\n      <StyledWrap>\n        {movieData.poster_path && (\n          <img\n            src={'https://image.tmdb.org/t/p/w300' + movieData.poster_path}\n            alt=\"film poster\"\n          />\n        )}\n        <StyledTextWrap>\n          <h2>{movieData.title}</h2>\n          <p>User score: {movieData.vote_average}</p>\n          <StyledTitle>Overview</StyledTitle>\n          <p>{movieData.overview}</p>\n          <StyledTitle>Genres</StyledTitle>\n          <p>\n            {movieData.genres.reduce((acc, el) => {\n              return acc + ' ' + el.name;\n            }, '')}\n          </p>\n        </StyledTextWrap>\n      </StyledWrap>\n    </>\n  );\n};\n","import axios from 'axios';\n\nexport const fetchMovieDetails = async id => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/';\n  const myKey = 'a794a0e126a53200eb2bd9e3c7f541ab';\n  const movieId = id;\n\n  const fetchResult = await axios\n    .get(`3/movie/${movieId}?api_key=${myKey}&language=en-US`)\n    .catch(error => {\n      console.log(error);\n    });\n\n  return fetchResult;\n};\n","import { StyledAdditionalWrap } from './MovieDetails.styled';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { useState, useEffect } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { MovieCard } from 'components/movieCard/MovieCard';\nimport { fetchMovieDetails } from '../../services/fetchMovieDetails';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(false);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const fetchResult = await fetchMovieDetails(id);\n        setMovieData(fetchResult.data);\n      } catch (error) {\n        setError(error.message);\n        console.log('error.message :>> ', error.message);\n      }\n    };\n\n    fetch();\n  }, [id]);\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {movieData && (\n        <>\n          <Link to={location.state?.from ?? '/'}>\n            <span>\n              <AiOutlineArrowLeft />\n              Go back\n            </span>\n          </Link>\n\n          <MovieCard movieData={movieData} />\n\n          <StyledAdditionalWrap>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </StyledAdditionalWrap>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledAdditionalWrap","styled","StyledWrap","StyledTextWrap","StyledTitle","MovieCard","movieData","poster_path","src","alt","title","vote_average","overview","genres","reduce","acc","el","name","fetchMovieDetails","id","axios","movieId","catch","error","console","log","fetchResult","useState","setMovieData","setError","useParams","location","useLocation","useEffect","fetch","data","message","to","state","from","Suspense","fallback"],"sourceRoot":""}